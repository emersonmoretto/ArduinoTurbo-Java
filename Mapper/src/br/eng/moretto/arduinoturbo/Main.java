/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.eng.moretto.arduinoturbo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Properties;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import sun.util.ResourceBundleEnumeration;

/**
 *
 * @author oper
 */
public class Main extends javax.swing.JFrame {

    SerialTest serial;
    
    Properties props = new Properties();
       
    static final String MAP_FILE = "map01.properties";
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
        try{
            props.load(Main.class.getClassLoader().getResourceAsStream(MAP_FILE));            
                        
            Enumeration<Object> e = props.keys();
            while(e.hasMoreElements()){
                mapList.add((String) e.nextElement());
            }                            
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        trafficLight1 = new eu.hansolo.steelseries.extras.TrafficLight();
        textAreaOutput = new java.awt.TextArea();
        connectSerialButton = new java.awt.Button();
        textField1 = new java.awt.TextField();
        sendButton = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        loadTable = new javax.swing.JButton();
        mapList = new java.awt.List();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        trafficLight1.setRedOn(true);

        org.jdesktop.layout.GroupLayout trafficLight1Layout = new org.jdesktop.layout.GroupLayout(trafficLight1);
        trafficLight1.setLayout(trafficLight1Layout);
        trafficLight1Layout.setHorizontalGroup(
            trafficLight1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 44, Short.MAX_VALUE)
        );
        trafficLight1Layout.setVerticalGroup(
            trafficLight1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 123, Short.MAX_VALUE)
        );

        connectSerialButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        connectSerialButton.setForeground(new java.awt.Color(0, 102, 153));
        connectSerialButton.setLabel("Connect");
        connectSerialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectSerialButtonActionPerformed(evt);
            }
        });

        textField1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        sendButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        sendButton.setLabel("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "1000", "2000", "3000", "4000", "5000", "6000", "7000"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        loadTable.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        loadTable.setText("Load Map");
        loadTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTableActionPerformed(evt);
            }
        });

        saveButton.setText("jButton1");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(saveButton)
                    .add(layout.createSequentialGroup()
                        .add(textField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 410, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sendButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(connectSerialButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                            .add(textAreaOutput, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(trafficLight1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(loadTable)
                                    .add(mapList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(62, 62, 62)))))
                .addContainerGap(0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(connectSerialButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(mapList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 307, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(loadTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 365, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 23, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(sendButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .add(textField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(textAreaOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(trafficLight1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectSerialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectSerialButtonActionPerformed

        serial = new SerialTest(textAreaOutput);
        serial.initialize();
        Thread t=new Thread() {
                public void run() {
                        //the following line will keep this app alive for 1000 seconds,
                        //waiting for events to occur and responding to them (printing incoming messages to console).
                        try {Thread.sleep(10000000);} catch (InterruptedException ie) {}
                }
        };
        t.start();
        trafficLight1.setRedOn(false);
        trafficLight1.setGreenOn(true);
        System.out.println("Started");
                
                
                
    }//GEN-LAST:event_connectSerialButtonActionPerformed

    private String buildStringMap(){
        
        TableModel model = jTable1.getModel();
        StringBuilder result = new StringBuilder();
        result.append("m");
        for(int i=0 ; i < 3 ; i++){

            for(int j=0 ; j < 3 ; j++){
                result.append(model.getValueAt(i, j));
                
                if(j != 2) result.append(",");                
            }
            result.append(";");
        }
        return result.toString();
    }
    
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed

        //textField1.setText(result.toString());
        serial.write(buildStringMap());
        
    }//GEN-LAST:event_sendButtonActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void loadTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTableActionPerformed

        
        if(mapList.getSelectedIndex() >= 0){
        
            TableModel model = jTable1.getModel();

            String[] rows = props.getProperty(mapList.getSelectedItem()).split(";");

            for(int i=0 ; i < 3 ; i++){

                for(int j=0 ; j < 3 ; j++){
                    model.setValueAt(Integer.parseInt(rows[i].split(",")[j]), i, j);
                }
            }
        }
        
        
    }//GEN-LAST:event_loadTableActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        String map = buildStringMap();
        
        String mapName = JOptionPane.showInputDialog ("Map name" , mapList.getSelectedItem()); 
        
        if(mapName != null){
            System.out.println(mapName);
            //TODO: save!
            //Persistence.getInstance().set(mapName, map);
            props.setProperty(mapName, map);
           
            try {
                System.out.println(Main.class.getClassLoader().getResource(MAP_FILE).getPath());
                //save properties to project root folder
                props.store(new FileOutputStream(Main.class.getClassLoader().getResource(MAP_FILE).getPath()), null);
                
            } catch (IOException ex) {
               
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
                        
        }
        
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button connectSerialButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton loadTable;
    private java.awt.List mapList;
    private javax.swing.JButton saveButton;
    private java.awt.Button sendButton;
    private java.awt.TextArea textAreaOutput;
    private java.awt.TextField textField1;
    private eu.hansolo.steelseries.extras.TrafficLight trafficLight1;
    // End of variables declaration//GEN-END:variables
}
